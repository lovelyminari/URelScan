<?xml version='1.0' encoding='UTF-8'?><root type="CompilationUnit"><packageDeclaration type="PackageDeclaration"><name type="Name" identifier="lguplus"><qualifier type="Name" identifier="com"/></name></packageDeclaration><imports><import type="ImportDeclaration" isAsterisk="false" isStatic="false"><name type="Name" identifier="Slf4j"><qualifier type="Name" identifier="slf4j"><qualifier type="Name" identifier="extern"><qualifier type="Name" identifier="lombok"/></qualifier></qualifier></name></import><import type="ImportDeclaration" isAsterisk="false" isStatic="false"><name type="Name" identifier="SpoonFolder"><qualifier type="Name" identifier="compiler"><qualifier type="Name" identifier="spoon"/></qualifier></name></import><import type="ImportDeclaration" isAsterisk="false" isStatic="false"><name type="Name" identifier="VirtualFolder"><qualifier type="Name" identifier="compiler"><qualifier type="Name" identifier="support"><qualifier type="Name" identifier="spoon"/></qualifier></qualifier></name></import><import type="ImportDeclaration" isAsterisk="false" isStatic="false"><name type="Name" identifier="List"><qualifier type="Name" identifier="util"><qualifier type="Name" identifier="java"/></qualifier></name></import></imports><types><type type="ClassOrInterfaceDeclaration" isInterface="false"><name type="SimpleName" identifier="ResourceFilter"/><extendedTypes><extendedType type="ClassOrInterfaceType"><name type="SimpleName" identifier="VirtualFolder"/></extendedType></extendedTypes><members><member type="FieldDeclaration"><modifiers><modifier type="Modifier" keyword="PRIVATE"/><modifier type="Modifier" keyword="FINAL"/></modifiers><variables><variable type="VariableDeclarator"><initializer type="StringLiteralExpr" value=".*/repository|.*/entity"/><name type="SimpleName" identifier="regex"/><type type="ClassOrInterfaceType"><name type="SimpleName" identifier="String"/></type></variable></variables></member><member type="ConstructorDeclaration"><body type="BlockStmt"><statements><statement type="ExpressionStmt"><expression type="MethodCallExpr"><name type="SimpleName" identifier="addFolder"/><scope type="ThisExpr"/><arguments><argument type="NameExpr"><name type="SimpleName" identifier="o"/></argument></arguments></expression></statement></statements></body><name type="SimpleName" identifier="ResourceFilter"/><modifiers><modifier type="Modifier" keyword="PUBLIC"/></modifiers><parameters><parameter type="Parameter" isVarArgs="false"><name type="SimpleName" identifier="o"/><type type="ClassOrInterfaceType"><name type="SimpleName" identifier="SpoonFolder"/></type></parameter></parameters></member><member type="MethodDeclaration"><body type="BlockStmt"><statements><statement type="ExpressionStmt"><expression type="VariableDeclarationExpr"><variables><variable type="VariableDeclarator"><initializer type="MethodCallExpr"><name type="SimpleName" identifier="getSubFolders"/><scope type="NameExpr"><name type="SimpleName" identifier="o"/></scope></initializer><name type="SimpleName" identifier="spoonFolders"/><type type="ClassOrInterfaceType"><name type="SimpleName" identifier="List"/><typeArguments><typeArgument type="ClassOrInterfaceType"><name type="SimpleName" identifier="SpoonFolder"/></typeArgument></typeArguments></type></variable></variables></expression></statement><statement type="IfStmt"><condition type="BinaryExpr" operator="EQUALS"><left type="MethodCallExpr"><name type="SimpleName" identifier="size"/><scope type="NameExpr"><name type="SimpleName" identifier="spoonFolders"/></scope></left><right type="IntegerLiteralExpr" value="0"/></condition><elseStmt type="BlockStmt"><statements><statement type="ExpressionStmt"><expression type="MethodCallExpr"><name type="SimpleName" identifier="forEach"/><scope type="MethodCallExpr"><name type="SimpleName" identifier="stream"/><scope type="NameExpr"><name type="SimpleName" identifier="spoonFolders"/></scope></scope><arguments><argument type="LambdaExpr" isEnclosingParameters="false"><body type="BlockStmt"><statements><statement type="IfStmt"><condition type="UnaryExpr" operator="LOGICAL_COMPLEMENT"><expression type="MethodCallExpr"><name type="SimpleName" identifier="matches"/><scope type="MethodCallExpr"><name type="SimpleName" identifier="getPath"/><scope type="NameExpr"><name type="SimpleName" identifier="folder"/></scope></scope><arguments><argument type="FieldAccessExpr"><name type="SimpleName" identifier="regex"/><scope type="ThisExpr"/></argument></arguments></expression></condition><thenStmt type="BlockStmt"><statements><statement type="ExpressionStmt"><expression type="MethodCallExpr"><name type="SimpleName" identifier="debug"/><scope type="NameExpr"><name type="SimpleName" identifier="log"/></scope><arguments><argument type="StringLiteralExpr" value="SpoonFolder Path = {}"/><argument type="MethodCallExpr"><name type="SimpleName" identifier="getPath"/><scope type="NameExpr"><name type="SimpleName" identifier="folder"/></scope></argument></arguments></expression></statement><statement type="ExpressionStmt"><expression type="MethodCallExpr"><name type="SimpleName" identifier="addFolder"/><scope type="ThisExpr"/><arguments><argument type="NameExpr"><name type="SimpleName" identifier="folder"/></argument></arguments></expression></statement></statements></thenStmt></statement></statements></body><parameters><parameter type="Parameter" isVarArgs="false"><name type="SimpleName" identifier="folder"/><type type="UnknownType"/></parameter></parameters></argument></arguments></expression><comment type="LineComment" content=" 하위 디렉토리 있으면, 정규식에 해당하는 폴더는 제외하고 재귀 호출"/></statement></statements></elseStmt><thenStmt type="BlockStmt"><statements><statement type="ExpressionStmt"><expression type="MethodCallExpr"><name type="SimpleName" identifier="addFolder"/><scope type="SuperExpr"/><arguments><argument type="NameExpr"><name type="SimpleName" identifier="o"/></argument></arguments></expression><comment type="LineComment" content="하위 디렉토리가 없으면, 이제 파일 추가!"/></statement></statements></thenStmt></statement></statements></body><type type="VoidType"/><name type="SimpleName" identifier="addFolder"/><modifiers><modifier type="Modifier" keyword="PUBLIC"/></modifiers><parameters><parameter type="Parameter" isVarArgs="false"><name type="SimpleName" identifier="o"/><type type="ClassOrInterfaceType"><name type="SimpleName" identifier="SpoonFolder"/></type></parameter></parameters><annotations><annotation type="MarkerAnnotationExpr"><name type="Name" identifier="Override"/></annotation></annotations></member></members><modifiers><modifier type="Modifier" keyword="PUBLIC"/></modifiers><annotations><annotation type="MarkerAnnotationExpr"><name type="Name" identifier="Slf4j"/></annotation></annotations></type></types></root>